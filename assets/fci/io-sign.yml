swagger: '2.0'
info:
  title: IO Sign - Backend API
  version: 0.0.1
basePath: /api/v1/fci
schemes:
  - https
paths:
  /qtsp/clauses:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: The QTSP clauses list
          schema:
            $ref: '#/definitions/QtspClauses'
        '403':
          $ref: "#/x-components/responses/Forbidden"
        '404':
          $ref: "#/x-components/responses/NotFound"
        default:
          $ref: "#/x-components/responses/Unexpected"
      operationId: getQtspClauses
      summary: Get clauses list and MRC from QTSP
  '/signature-requests/{signatureRequestId}':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: signatureRequestId
          type: string
          required: true
      responses:
        '200':
          description: The Signature Request detail
          schema:
            $ref: '#/definitions/SignatureRequestDetailView'
        '403':
          $ref: "#/x-components/responses/Forbidden"
        '404':
          $ref: "#/x-components/responses/NotFound"
        default:
          $ref: "#/x-components/responses/Unexpected"
      operationId: getSignatureRequestById
      summary: Get a Signature Request By Id
  /signatures:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateSignatureBody'
      responses:
        '201':
          description: Signature created
        '400':
          $ref: "#/x-components/responses/BadRequest"
        '403':
          $ref: "#/x-components/responses/Forbidden"
        default:
          $ref: "#/x-components/responses/Unexpected"
      operationId: createSignature
      summary: Create a Signature from SignatureRequest
definitions:
  ClausesSignature:
    properties:
      type:
        type: string
        enum:
          - COORDS
          - UNIQUE_NAME
        description: base64 of coords object or fieldName string
      signatureFieldData:
        type: string
        description: uniqueName or base64(Coords) base64({x,y,w,h,page})
    description: accepted signature clause
    type: object
  CreateSignatureBody:
    properties:
      documentSignatures:
        items:
          $ref: '#/definitions/DocumentSignature'
        minItems: 1
        type: array
        uniqueItems: true
      publicKeyDigest:
        $ref: '#/definitions/PublicKeyDigest'
      qtspClauses:
        $ref: '#/definitions/QtspClausesMetadata'
      signatureRequestId:
        $ref: '#/definitions/SignatureRequestId'
      timestamp:
        format: date-time
        type: string 
    required:
      - signatureRequestId
      - publicKeyDigest
      - documentSignatures
      - qtspClauses
      - timestamp
    type: object
  Document:
    allOf:
      - properties:
          id:
            format: ulid
            type: string
          status:
            $ref: '#/definitions/DocumentStatus'
          url:
            format: uri
            type: string
        required:
          - id
          - status
        type: object
      - $ref: '#/definitions/DocumentMetadata'
  DocumentMetadata:
    properties:
      clauses:
        items:
          $ref: '#/definitions/Clause'
        minItems: 1
        type: array
        uniqueItems: true
      title:
        type: string
    required:
      - title
    type: object
  DocumentStatus:
    description: |
      Signature request status:
       * `WAIT_FOR_UPLOAD` - The document has not been uploaded yet.
       * `VALIDATION_IN_PROGRESS` - Validation of the uploaded document in progress.
       * `READY` - The document has passed validation and is ready.
       * `VALIDATION_ERROR` - An error occurred while validating the document.
    type: string
    x-extensible-enum:
      - WAIT_FOR_UPLOAD
      - VALIDATION_IN_PROGRESS
      - READY
      - VALIDATION_ERROR
  DocumentSignature:
    properties:
      clauses:
        items:
          $ref: '#/definitions/ClausesSignature'
        type: array
      documentId:
        format: ulid
        type: string
      signature:
        description: Signature of document digest concatenated with document clauses
        format: base64url
        type: string
    required:
      - documentId
      - signature
      - clauses
    type: object
  Clause:
    properties:
      coords:
        $ref: '#/definitions/Coords'
      type:
        type: string
        enum:
          - OPTIONAL
          - UNFAIR
          - MANDATORY
      uniqueName:
        type: string
      title:
        type: string
    required:
      - title
      - uniqueName
      - type
    type: object
  Coords:
    properties:
        page:
          type: number
          description: the page where is the signatureBox
        x:
          type: number
          description: x coord of the signature box
        y:
          type: number
          description: y coord of the signature box
        w:
          type: number
          description: the width of the signature box
        h:
          type: number
          description: the height of the signature box
    type: object
    description: coords that match signature box with zero reference at the top left of the page
  PublicKeyDigest:
    description: Hash of PEM public key encoded in base64
    format: base64url
    type: string
  QtspClause:
    properties:
      text:
        type: string
    required:
      - text
    type: object
  QtspClauses:
    properties:
      clauses:
        items:
          $ref: '#/definitions/QtspClause'
        minItems: 1
        type: array
        uniqueItems: true
      mrcDocumentUrl:
        format: uri
        type: string
      privacyDocumentUrl:
        format: uri
        type: string
      tosDocumentUrl:
        format: uri
        type: string
    required:
      - text
      - mrcUrl
    type: object
  QtspClausesMetadata:
    properties:
      acceptedClauses:
        items:
          $ref: '#/definitions/QtspClause'
        minItems: 1
        type: array
        uniqueItems: true
      mrcDocumentUrl:
        format: uri
        type: string
      signature:
        description: Signature of MRC digest concatenated with QTSP accepted clauses
        format: base64url
        type: string
    required:
      - qtspAcceptedClauses
      - signature
    type: object
  ProductId:
    format: ulid
    type: string
  QrCodeUrl:
    format: url
    minLength: 1
    type: string
  SignatureRequestDetailView:
    properties:
      documents:
        items:
          $ref: '#/definitions/Document'
        type: array
      expiresAt:
        $ref: '#/definitions/Timestamp'
      id:
        format: ulid
        type: string
      productId:
        $ref: '#/definitions/ProductId'
      qrCodeUrl:
        $ref: '#/definitions/QrCodeUrl'
      status:
        $ref: '#/definitions/SignatureRequestStatus'
    required:
      - id
      - productId
      - qrCodeUrl
      - documents
    type: object
  SignatureRequestId:
    format: ulid
    minLength: 1
    type: string
  SignatureRequestStatus:
    description: |
      Signature request status:
       * `DRAFT` - The signature request has been created but not all documents have been uploaded yet.
       * `READY` - The signature request is ready for processing. In this phase the documents will be analyzed and prepared for sending to the USER.
       * `WAIT_FOR_SIGNATURE` - The signature request has been sent to the user and is awaiting signature
       * `SIGNED` - The signature request was successfully signed.
    type: string
    x-extensible-enum:
      - DRAFT
      - READY
      - WAIT_FOR_SIGNATURE
      - SIGNED
  Timestamp:
    description: A date-time field in ISO-8601 format and UTC timezone.
    example: '2018-10-13T00:00:00.000Z'
    format: UTCISODateFromString
    type: string
    x-import: '@pagopa/ts-commons/lib/dates'
  ProblemJson:
    properties:
      detail:
        description: |-
          A human readable explanation specific to this occurrence of the
          problem.
        example: There was an error processing the request
        type: string
      instance:
        description: >-
          An absolute URI that identifies the specific occurrence of the
          problem. It may or may not yield further information if dereferenced.
        format: uri
        type: string
      status:
        description: >-
          The HTTP status code generated by the origin server for this
          occurrence of the problem.
        example: 200
        exclusiveMaximum: true
        format: int32
        maximum: 600
        minimum: 100
        type: integer
      title:
        description: |-
          A short, summary of the problem type. Written in english and readable
          for engineers (usually not suited for non technical stakeholders and
          not localized); example: Service Unavailable
        type: string
      type:
        default: 'about:blank'
        description: |-
          An absolute URI that identifies the problem type. When dereferenced,
          it SHOULD provide human-readable documentation for the problem type
          (e.g., using HTML).
        example: 'https://example.com/problem/constraint-violation'
        format: uri
        type: string
    required:
      - title
      - status
      - detail
    type: object
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
security:
  - Bearer: []
x-components:
  responses:
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/definitions/ProblemJson'
      description: Validation error on body
    Forbidden:
      content:
        application/json:
          schema:
            $ref: '#/definitions/ProblemJson'
      description: You don't have enough privileges to perform this action
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/definitions/ProblemJson'
      description: The specified resource was not found
    Unexpected:
      content:
        application/json:
          schema:
            $ref: '#/definitions/ProblemJson'
      description: Unexpected error
