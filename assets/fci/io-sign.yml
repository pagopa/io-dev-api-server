info:
  title: IO Sign - User API
  version: 0.0.1
paths:
  /signature-requests/{signatureRequestId}:
    get:
      operationId: getSignatureRequestById
      summary: Get a Signature Request By Id
      parameters:
        - in: path
          name: signatureRequestId
          required: true
          format: ulid
          minLength: 1
          type: string
      responses:
        "200":
          description: The Signature Request detail
          schema:
            $ref: "#/definitions/SignatureRequestDetailView"
        "403":
          description: You don't have enough privileges to perform this action
          schema:
            $ref: "#/definitions/ProblemJson"
        "404":
          description: The specified resource was not found
          schema:
            $ref: "#/definitions/ProblemJson"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/ProblemJson"
      produces:
        - application/json
  /qtsp/clauses:
    get:
      operationId: getQtspClauses
      summary: Get clauses list and MRC from QTSP
      responses:
        "200":
          description: The QTSP clauses list
          schema:
            $ref: "#/definitions/QtspClauses"
        "403":
          description: You don't have enough privileges to perform this action
          schema:
            $ref: "#/definitions/ProblemJson"
        "404":
          description: The specified resource was not found
          schema:
            $ref: "#/definitions/ProblemJson"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/ProblemJson"
      parameters: []
      produces:
        - application/json
  /signatures/{signatureId}:
    get:
      operationId: getSignatureById
      summary: Get a Signature By Id
      parameters:
        - in: path
          name: signatureId
          required: true
          format: ulid
          minLength: 1
          type: string
      responses:
        "200":
          description: The Signature Request detail
          schema:
            $ref: "#/definitions/SignatureDetailView"
        "403":
          description: You don't have enough privileges to perform this action
          schema:
            $ref: "#/definitions/ProblemJson"
        "404":
          description: The specified resource was not found
          schema:
            $ref: "#/definitions/ProblemJson"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/ProblemJson"
      produces:
        - application/json
  /signatures:
    post:
      operationId: createSignature
      summary: Create a Signature from SignatureRequest
      responses:
        "201":
          description: Signature created
          schema:
            $ref: "#/definitions/SignatureDetailView"
        "400":
          description: Validation error on body
          schema:
            $ref: "#/definitions/ProblemJson"
        "403":
          description: You don't have enough privileges to perform this action
          schema:
            $ref: "#/definitions/ProblemJson"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/ProblemJson"
      parameters:
        - required: true
          name: body
          in: body
          schema:
            $ref: "#/definitions/CreateSignatureBody"
      consumes:
        - application/json
      produces:
        - application/json
swagger: "2.0"
definitions:
  ProblemJson:
    type: object
    properties:
      type:
        type: string
        format: uri
        description: |-
          An absolute URI that identifies the problem type. When dereferenced,
          it SHOULD provide human-readable documentation for the problem type
          (e.g., using HTML).
        default: about:blank
        example: https://example.com/problem/constraint-violation
      title:
        type: string
        description: |-
          A short, summary of the problem type. Written in english and readable
          for engineers (usually not suited for non technical stakeholders and
          not localized); example: Service Unavailable
      status:
        type: integer
        format: int32
        description: The HTTP status code generated by the origin server for this occurrence of the problem.
        minimum: 100
        maximum: 600
        exclusiveMaximum: true
        example: 200
      detail:
        type: string
        description: |-
          A human readable explanation specific to this occurrence of the
          problem.
        example: There was an error processing the request
      instance:
        type: string
        format: uri
        description: An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.
    required:
      - title
      - status
      - detail
  Email:
    type: string
    description: User's email.
    format: EmailString
    x-import: "@pagopa/ts-commons/lib/strings"
    example: me@example.com
  Clause:
    type: object
    properties:
      title:
        type: string
      signatureFieldId:
        type: string
      required:
        type: boolean
    required:
      - title
      - signatureFieldId
      - required
  DocumentMetadata:
    type: object
    properties:
      title:
        type: string
      clauses:
        type: array
        items:
          $ref: "#/definitions/Clause"
        minItems: 1
        uniqueItems: true
    required:
      - title
      - clauses
  Document:
    allOf:
      - type: object
        properties:
          id:
            type: string
            format: ulid
          url:
            type: string
            format: uri
        required:
          - id
      - $ref: "#/definitions/DocumentMetadata"
  ProductId:
    type: string
    format: ulid
  Timestamp:
    type: string
    format: UTCISODateFromString
    description: A date-time field in ISO-8601 format and UTC timezone.
    x-import: "@pagopa/ts-commons/lib/dates"
    example: "2018-10-13T00:00:00.000Z"
  QrCodeUrl:
    type: string
    format: url
    minLength: 1
  SignatureRequestStatus:
    type: string
    x-extensible-enum:
      - DRAFT
      - WAIT_FOR_ISSUER
      - READY
      - WAIT_FOR_SIGNATURE
      - SIGNED
    description: |
      Signature request status:
       * `DRAFT` - The signature request has been created but not all documents have been uploaded yet.
       * `WAIT_FOR_ISSUER` - All documents have been uploaded but the ISSUER has not yet marked the signature request as READY.
       * `READY` - The signature request is ready for processing. In this phase the documents will be analyzed and prepared for sending to the USER.
       * `WAIT_FOR_SIGNATURE` - The signature request has been sent to the user and is awaiting signature
       * `SIGNED` - The signature request was successfully signed.
  SignatureRequestDetailView:
    type: object
    properties:
      id:
        type: string
        format: ulid
      status:
        $ref: "#/definitions/SignatureRequestStatus"
      productId:
        $ref: "#/definitions/ProductId"
      expiresAt:
        $ref: "#/definitions/Timestamp"
      qrCodeUrl:
        $ref: "#/definitions/QrCodeUrl"
      documents:
        type: array
        items:
          $ref: "#/definitions/Document"
    required:
      - id
      - productId
      - qrCodeUrl
      - documents
  SignatureRequestId:
    type: string
    format: ulid
    minLength: 1
  QtspClauses:
    type: object
    properties:
      clauses:
        type: array
        items:
          $ref: "#/definitions/QtspClause"
        minItems: 1
        uniqueItems: true
      mrcDocumentUrl:
        type: string
        format: uri
      privacyDocumentUrl:
        type: string
        format: uri
      tosDocumentUrl:
        type: string
        format: uri
    required:
      - text
      - mrcUrl
  QtspClause:
    type: object
    properties:
      text:
        type: string
    required:
      - text
  PublicKey:
    type: string
    format: base64url
    description: PEM public key encoded in base64
  SamlAssertion:
    type: string
    format: base64url
    description: SPID SAML assertion encoded in base64
  ClausesSignature:
    type: object
    properties:
      signatureFieldId:
        type: string
      accepted:
        type: boolean
  DocumentSignature:
    type: object
    properties:
      documentId:
        type: string
        format: ulid
      signature:
        type: string
        format: base64url
        description: Signature of document digest concatenated with document clauses
      clauses:
        type: array
        items:
          $ref: "#/definitions/ClausesSignature"
    required:
      - documentId
      - signature
      - clauses
  QtspClausesMetadata:
    type: object
    properties:
      acceptedClauses:
        type: array
        items:
          $ref: "#/definitions/QtspClause"
        minItems: 1
        uniqueItems: true
      mrcDocumentUrl:
        type: string
        format: uri
      signature:
        type: string
        format: base64url
        description: Signature of MRC digest concatenated with QTSP accepted clauses
    required:
      - qtspAcceptedClauses
      - signature
  CreateSignatureBody:
    type: object
    properties:
      signatureRequestId:
        $ref: "#/definitions/SignatureRequestId"
      email:
        $ref: "#/definitions/Email"
      publicKey:
        $ref: "#/definitions/PublicKey"
      spidSamlAssertion:
        $ref: "#/definitions/SamlAssertion"
      documentSignatures:
        type: array
        items:
          $ref: "#/definitions/DocumentSignature"
        minItems: 1
        uniqueItems: true
      qtspClauses:
        $ref: "#/definitions/QtspClausesMetadata"
    required:
      - signatureRequestId
      - email
      - publicKey
      - spidSamlAssertion
      - documentSignatures
      - qtspClauses
  SignatureId:
    type: string
    format: ulid
    minLength: 1
  SignatureDetailView:
    type: object
    properties:
      id:
        $ref: "#/definitions/SignatureId"
      signatureRequestId:
        $ref: "#/definitions/SignatureRequestId"
      email:
        $ref: "#/definitions/Email"
      publicKey:
        $ref: "#/definitions/PublicKey"
      spidSamlAssertion:
        $ref: "#/definitions/SamlAssertion"
      documentSignatures:
        type: array
        items:
          $ref: "#/definitions/DocumentSignature"
      qtspClauses:
        $ref: "#/definitions/QtspClausesMetadata"
    required:
      - id
      - signatureRequestId
      - email
      - publicKey
      - spidSamlAssertion
      - documentSignatures
      - qtspClauses
x-components:
  responses:
    NotFound:
      description: The specified resource was not found
      schema:
        $ref: "#/definitions/ProblemJson"
    BadRequest:
      description: Validation error on body
      schema:
        $ref: "#/definitions/ProblemJson"
    Forbidden:
      description: You don't have enough privileges to perform this action
      schema:
        $ref: "#/definitions/ProblemJson"
    Unexpected:
      description: Unexpected error
      schema:
        $ref: "#/definitions/ProblemJson"