swagger: '2.0'
info:
  title: IO Sign - Backend API
  version: 0.0.1
host: app-backend.io.italia.it
basePath: /api/v1/sign
schemes:
  - https
paths:
  /qtsp/clauses:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: The QTSP clauses list
          schema:
            $ref: '#/definitions/QtspClausesMetadata'
        '403':
          $ref: "#/x-components/responses/Forbidden"
        '404':
          $ref: "#/x-components/responses/NotFound"
      tags:
        - QTSP Clauses
      operationId: getQtspClausesMetadata
      summary: Get clauses list and MRC from QTSP
  /qtsp/clauses/filled_document:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateFilledDocumentBody'
      responses:
        '201':
          description: Filled document created
          schema:
            $ref: '#/definitions/FilledDocumentDetailView'
        '400':
          $ref: '#/x-components/responses/BadRequest'
        '403':
          $ref: '#/x-components/responses/Forbidden'
      tags:
        - QTSP Clauses
      operationId: createFilledDocument
      summary: Create a filled document for QTSP
  '/signature-requests/{id}':
    get:
      produces:
        - application/json
      parameters:
        - description: Entity Id
          format: ulid
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: The Signature Request detail
          schema:
            $ref: '#/definitions/SignatureRequestDetailView'
        '403':
          $ref: '#/x-components/responses/Forbidden'
        '404':
          $ref: '#/x-components/responses/NotFound'
      tags:
        - Signature Request
      operationId: getSignatureRequestById
      summary: Get a Signature Request By Id
  /signatures:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateSignatureBody'
      responses:
        '201':
          description: Signature created
        '400':
          $ref: '#/x-components/responses/BadRequest'
        '403':
          $ref: '#/x-components/responses/Forbidden'
      tags:
        - Signature
      operationId: createSignature
      summary: Create a Signature from SignatureRequest
definitions:
  Clause:
    properties:
      title:
        type: string
      type:
        $ref: '#/definitions/ClausesType'
    required:
      - title
      - type
    type: object
  ClausesType:
    description: >
      Signature request status:

      * `REQUIRED` - The clause is mandatory and the user sees it already
      accepted.

      * `UNFAIR` - The clause is unfair and the user must explicitly accept it
      to continue

      * `OPTIONAL` - The clause is optional and the user can also decide not to
      accept it
    type: string
    x-extensible-enum:
      - REQUIRED
      - UNFAIR
      - OPTIONAL
  CreateFilledDocumentBody:
    properties:
      document_url:
        format: url
        type: string
    required:
      - document_url
    type: object
  CreateSignatureBody:
    properties:
      document_signatures:
        items:
          $ref: '#/definitions/DocumentSignature'
        minItems: 1
        type: array
        uniqueItems: true
      public_key_digest:
        $ref: '#/definitions/PublicKeyDigest'
      qtsp_clauses:
        $ref: '#/definitions/QtspClauses'
      signature_request_id:
        $ref: '#/definitions/Id'
    required:
      - signature_request_id
      - public_key_digest
      - document_signatures
      - qtsp_clauses
    type: object
  Document:
    properties:
      created_at:
        $ref: '#/definitions/Timestamp'
      id:
        $ref: '#/definitions/Id'
      metadata:
        $ref: '#/definitions/DocumentMetadata'
      status:
        enum:
          - WAIT_FOR_UPLOAD
          - WAIT_FOR_VALIDATION
          - READY
          - REJECTED
        type: string
      updated_at:
        $ref: '#/definitions/Timestamp'
    required:
      - id
      - status
      - metadata
      - created_at
      - updated_at
    type: object
  DocumentDetailView:
    allOf:
      - $ref: '#/definitions/Document'
      - properties:
          uploaded_at:
            $ref: '#/definitions/Timestamp'
          url:
            format: uri
            type: string
        required:
          - uploaded_at
          - url
        type: object
  DocumentMetadata:
    properties:
      signature_fields:
        items:
          $ref: '#/definitions/SignatureField'
        type: array
      title:
        type: string
    type: object
  DocumentSignature:
    properties:
      document_id:
        format: ulid
        type: string
      signature:
        description: Signature of document digest concatenated with document clauses
        format: base64url
        type: string
      signature_fields:
        items:
          $ref: '#/definitions/SignatureField'
        type: array
    required:
      - document_id
      - signature
      - signature_fields
    type: object
  ExistingSignatureFieldAttrs:
    properties:
      unique_name:
        type: string
    required:
      - unique_name
    type: object
  FilledDocumentDetailView:
    properties:
      filled_document_url:
        format: url
        type: string
    required:
      - filled_document_url
    type: object
  Id:
    description: Entity Id
    example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
    format: ulid
    type: string
  PublicKeyDigest:
    description: Hash of PEM public key encoded in base64
    format: base64url
    type: string
  QtspClause:
    properties:
      text:
        type: string
    required:
      - text
    type: object
  QtspClauses:
    properties:
      accepted_clauses:
        items:
          $ref: '#/definitions/QtspClause'
        minItems: 1
        type: array
        uniqueItems: true
      filled_document_url:
        format: uri
        type: string
      signature:
        description: Signature of MRC digest concatenated with QTSP accepted clauses
        format: base64url
        type: string
      tos_signature_timestamp:
        $ref: '#/definitions/Timestamp'
    required:
      - accepted_clauses
      - filled_document_url
      - signature
      - tos_signature_timestamp
    type: object
  QtspClausesMetadata:
    properties:
      clauses:
        items:
          $ref: '#/definitions/QtspClause'
        minItems: 1
        type: array
        uniqueItems: true
      document_url:
        format: uri
        type: string
      nonce:
        format: base64
        type: string
      privacy_text:
        type: string
      privacy_url:
        format: url
        type: string
      terms_and_conditions_url:
        format: uri
        type: string
    required:
      - clauses
      - document_url
      - privacy_url
      - privacy_text
      - terms_and_conditions_url
    type: object
  SignatureField:
    properties:
      attrs:
        type: object
      clause:
        $ref: '#/definitions/Clause'
    required:
      - unique_name
      - clause
    type: object
  SignatureFieldToBeCreatedAttrs:
    properties:
      coordinates:
        properties:
          bottom_left:
            properties:
              x:
                minimum: 0
                type: number
              'y':
                minimum: 0
                type: number
            type: object
          top_right:
            properties:
              x:
                minimum: 0
                type: number
              'y':
                minimum: 0
                type: number
            type: object
        required:
          - bottom_left
          - top_right
        type: object
      page:
        minimum: 0
        type: number
    required:
      - coordinates
      - page
    type: object
  SignatureRequestDetailView:
    properties:
      created_at:
        $ref: '#/definitions/Timestamp'
      documents:
        items:
          $ref: '#/definitions/DocumentDetailView'
        type: array
      dossier_id:
        $ref: '#/definitions/Id'
      expires_at:
        $ref: '#/definitions/Timestamp'
      id:
        $ref: '#/definitions/Id'
      qr_code_url:
        format: uri
        type: string
      signer_id:
        $ref: '#/definitions/Id'
      status:
        type: string
        x-extensible-enum:
          - DRAFT
          - READY
          - WAIT_FOR_SIGNATURE
          - WAIT_FOR_QTSP
          - SIGNED
      updated_at:
        $ref: '#/definitions/Timestamp'
    required:
      - id
      - status
      - dossier_id
      - signer_id
      - expires_at
      - documents
      - created_at
      - updated_at
    type: object
  Timestamp:
    description: A date-time field in ISO-8601 format and UTC timezone.
    example: '2018-10-13T00:00:00.000Z'
    format: UTCISODateFromString
    type: string
    x-import: '@pagopa/ts-commons/lib/dates'
  ProblemJson:
    properties:
      detail:
        description: |-
          A human readable explanation specific to this occurrence of the
          problem.
        example: There was an error processing the request
        type: string
      instance:
        description: >-
          An absolute URI that identifies the specific occurrence of the
          problem. It may or may not yield further information if dereferenced.
        format: uri
        type: string
      status:
        description: >-
          The HTTP status code generated by the origin server for this
          occurrence of the problem.
        example: 200
        exclusiveMaximum: true
        format: int32
        maximum: 600
        minimum: 100
        type: integer
      title:
        description: |-
          A short, summary of the problem type. Written in english and readable
          for engineers (usually not suited for non technical stakeholders and
          not localized); example: Service Unavailable
        type: string
      type:
        default: 'about:blank'
        description: |-
          An absolute URI that identifies the problem type. When dereferenced,
          it SHOULD provide human-readable documentation for the problem type
          (e.g., using HTML).
        example: 'https://example.com/problem/constraint-violation'
        format: uri
        type: string
    required:
      - title
      - status
      - detail
    type: object
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
security:
  - Bearer: []
x-components:
  responses:
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/definitions/ProblemJson'
      description: Validation error on body
    Forbidden:
      content:
        application/json:
          schema:
            $ref: '#/definitions/ProblemJson'
      description: You don't have enough privileges to perform this action
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/definitions/ProblemJson'
      description: The specified resource was not found
    Unexpected:
      content:
        application/json:
          schema:
            $ref: '#/definitions/ProblemJson'
      description: Unexpected error